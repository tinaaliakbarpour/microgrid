// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: microgrid/iot/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateGrid struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CenterLat int32  `protobuf:"varint,3,opt,name=centerLat,proto3" json:"centerLat,omitempty"`
	CenterLon int32  `protobuf:"varint,4,opt,name=centerLon,proto3" json:"centerLon,omitempty"`
	Side      uint64 `protobuf:"varint,5,opt,name=side,proto3" json:"side,omitempty"`
}

func (m *MsgCreateGrid) Reset()         { *m = MsgCreateGrid{} }
func (m *MsgCreateGrid) String() string { return proto.CompactTextString(m) }
func (*MsgCreateGrid) ProtoMessage()    {}
func (*MsgCreateGrid) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5300a5bade0bae, []int{0}
}
func (m *MsgCreateGrid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateGrid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateGrid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateGrid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateGrid.Merge(m, src)
}
func (m *MsgCreateGrid) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateGrid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateGrid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateGrid proto.InternalMessageInfo

func (m *MsgCreateGrid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateGrid) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateGrid) GetCenterLat() int32 {
	if m != nil {
		return m.CenterLat
	}
	return 0
}

func (m *MsgCreateGrid) GetCenterLon() int32 {
	if m != nil {
		return m.CenterLon
	}
	return 0
}

func (m *MsgCreateGrid) GetSide() uint64 {
	if m != nil {
		return m.Side
	}
	return 0
}

type MsgCreateGridResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateGridResponse) Reset()         { *m = MsgCreateGridResponse{} }
func (m *MsgCreateGridResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateGridResponse) ProtoMessage()    {}
func (*MsgCreateGridResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5300a5bade0bae, []int{1}
}
func (m *MsgCreateGridResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateGridResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateGridResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateGridResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateGridResponse.Merge(m, src)
}
func (m *MsgCreateGridResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateGridResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateGridResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateGridResponse proto.InternalMessageInfo

func (m *MsgCreateGridResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgRegisterAdmin struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgRegisterAdmin) Reset()         { *m = MsgRegisterAdmin{} }
func (m *MsgRegisterAdmin) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterAdmin) ProtoMessage()    {}
func (*MsgRegisterAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5300a5bade0bae, []int{2}
}
func (m *MsgRegisterAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterAdmin.Merge(m, src)
}
func (m *MsgRegisterAdmin) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterAdmin proto.InternalMessageInfo

func (m *MsgRegisterAdmin) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRegisterAdmin) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgRegisterAdmin) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgRegisterAdminResponse struct {
	Grid *Grid `protobuf:"bytes,1,opt,name=grid,proto3" json:"grid,omitempty"`
}

func (m *MsgRegisterAdminResponse) Reset()         { *m = MsgRegisterAdminResponse{} }
func (m *MsgRegisterAdminResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterAdminResponse) ProtoMessage()    {}
func (*MsgRegisterAdminResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5300a5bade0bae, []int{3}
}
func (m *MsgRegisterAdminResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterAdminResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterAdminResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterAdminResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterAdminResponse.Merge(m, src)
}
func (m *MsgRegisterAdminResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterAdminResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterAdminResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterAdminResponse proto.InternalMessageInfo

func (m *MsgRegisterAdminResponse) GetGrid() *Grid {
	if m != nil {
		return m.Grid
	}
	return nil
}

type MsgDeleteGrid struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteGrid) Reset()         { *m = MsgDeleteGrid{} }
func (m *MsgDeleteGrid) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteGrid) ProtoMessage()    {}
func (*MsgDeleteGrid) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5300a5bade0bae, []int{4}
}
func (m *MsgDeleteGrid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteGrid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteGrid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteGrid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteGrid.Merge(m, src)
}
func (m *MsgDeleteGrid) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteGrid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteGrid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteGrid proto.InternalMessageInfo

func (m *MsgDeleteGrid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteGrid) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteGridResponse struct {
}

func (m *MsgDeleteGridResponse) Reset()         { *m = MsgDeleteGridResponse{} }
func (m *MsgDeleteGridResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteGridResponse) ProtoMessage()    {}
func (*MsgDeleteGridResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5300a5bade0bae, []int{5}
}
func (m *MsgDeleteGridResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteGridResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteGridResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteGridResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteGridResponse.Merge(m, src)
}
func (m *MsgDeleteGridResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteGridResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteGridResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteGridResponse proto.InternalMessageInfo

type MsgCreateDevice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GridId  uint64 `protobuf:"varint,2,opt,name=gridId,proto3" json:"gridId,omitempty"`
	Lat     int32  `protobuf:"varint,3,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon     int32  `protobuf:"varint,4,opt,name=lon,proto3" json:"lon,omitempty"`
	Voltage uint64 `protobuf:"varint,5,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Power   uint64 `protobuf:"varint,6,opt,name=power,proto3" json:"power,omitempty"`
	Others  string `protobuf:"bytes,7,opt,name=others,proto3" json:"others,omitempty"`
}

func (m *MsgCreateDevice) Reset()         { *m = MsgCreateDevice{} }
func (m *MsgCreateDevice) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDevice) ProtoMessage()    {}
func (*MsgCreateDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5300a5bade0bae, []int{6}
}
func (m *MsgCreateDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDevice.Merge(m, src)
}
func (m *MsgCreateDevice) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDevice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDevice proto.InternalMessageInfo

func (m *MsgCreateDevice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateDevice) GetGridId() uint64 {
	if m != nil {
		return m.GridId
	}
	return 0
}

func (m *MsgCreateDevice) GetLat() int32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *MsgCreateDevice) GetLon() int32 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *MsgCreateDevice) GetVoltage() uint64 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *MsgCreateDevice) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *MsgCreateDevice) GetOthers() string {
	if m != nil {
		return m.Others
	}
	return ""
}

type MsgCreateDeviceResponse struct {
}

func (m *MsgCreateDeviceResponse) Reset()         { *m = MsgCreateDeviceResponse{} }
func (m *MsgCreateDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDeviceResponse) ProtoMessage()    {}
func (*MsgCreateDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5300a5bade0bae, []int{7}
}
func (m *MsgCreateDeviceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDeviceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDeviceResponse.Merge(m, src)
}
func (m *MsgCreateDeviceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDeviceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateGrid)(nil), "microgrid.iot.MsgCreateGrid")
	proto.RegisterType((*MsgCreateGridResponse)(nil), "microgrid.iot.MsgCreateGridResponse")
	proto.RegisterType((*MsgRegisterAdmin)(nil), "microgrid.iot.MsgRegisterAdmin")
	proto.RegisterType((*MsgRegisterAdminResponse)(nil), "microgrid.iot.MsgRegisterAdminResponse")
	proto.RegisterType((*MsgDeleteGrid)(nil), "microgrid.iot.MsgDeleteGrid")
	proto.RegisterType((*MsgDeleteGridResponse)(nil), "microgrid.iot.MsgDeleteGridResponse")
	proto.RegisterType((*MsgCreateDevice)(nil), "microgrid.iot.MsgCreateDevice")
	proto.RegisterType((*MsgCreateDeviceResponse)(nil), "microgrid.iot.MsgCreateDeviceResponse")
}

func init() { proto.RegisterFile("microgrid/iot/tx.proto", fileDescriptor_9a5300a5bade0bae) }

var fileDescriptor_9a5300a5bade0bae = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcf, 0x6e, 0xd3, 0x30,
	0x1c, 0x6e, 0xd2, 0xb4, 0x53, 0x7f, 0x50, 0x98, 0x0c, 0x6c, 0xa6, 0x9a, 0x42, 0x15, 0x21, 0xda,
	0x53, 0x2a, 0xc6, 0x89, 0x23, 0x6c, 0x12, 0x42, 0x50, 0x69, 0xca, 0x61, 0x12, 0xdc, 0xdc, 0xe4,
	0xa7, 0xcc, 0xa2, 0x8d, 0x23, 0xdb, 0x1b, 0xe3, 0x21, 0x90, 0x78, 0x13, 0x5e, 0x83, 0xe3, 0x8e,
	0x1c, 0x38, 0xa0, 0xf6, 0x45, 0x90, 0xdd, 0x39, 0x6d, 0xba, 0xd1, 0xdd, 0x7e, 0x7f, 0x3f, 0x7f,
	0xfe, 0x3e, 0xcb, 0xb0, 0x37, 0xe3, 0xa9, 0x14, 0xb9, 0xe4, 0xd9, 0x88, 0x0b, 0x3d, 0xd2, 0x97,
	0x71, 0x29, 0x85, 0x16, 0xa4, 0x5b, 0xd5, 0x63, 0x2e, 0x74, 0x8f, 0xd6, 0xc7, 0x6c, 0xdd, 0x0e,
	0x46, 0xdf, 0x3d, 0xe8, 0x8e, 0x55, 0x7e, 0x24, 0x91, 0x69, 0x7c, 0x27, 0x79, 0x46, 0x28, 0xec,
	0xa4, 0x26, 0x13, 0x92, 0x7a, 0x7d, 0x6f, 0xd8, 0x49, 0x5c, 0x4a, 0x08, 0x04, 0x05, 0x9b, 0x21,
	0xf5, 0x6d, 0xd9, 0xc6, 0xe4, 0x00, 0x3a, 0x29, 0x16, 0x1a, 0xe5, 0x47, 0xa6, 0x69, 0xb3, 0xef,
	0x0d, 0x5b, 0xc9, 0xaa, 0xb0, 0xd6, 0x15, 0x05, 0x0d, 0x6a, 0x5d, 0x51, 0x18, 0x3c, 0xc5, 0x33,
	0xa4, 0xad, 0xbe, 0x37, 0x0c, 0x12, 0x1b, 0x47, 0x03, 0x78, 0x52, 0xa3, 0x93, 0xa0, 0x2a, 0x45,
	0xa1, 0x90, 0x3c, 0x00, 0x9f, 0x67, 0x96, 0x51, 0x90, 0xf8, 0x3c, 0x8b, 0x4e, 0x61, 0x77, 0xac,
	0xf2, 0x04, 0x73, 0xae, 0x34, 0xca, 0x37, 0xd9, 0x8c, 0x17, 0x5b, 0xa8, 0x2f, 0xb7, 0x7d, 0xb7,
	0x6d, 0x26, 0x59, 0x96, 0x49, 0x54, 0xca, 0x92, 0xee, 0x24, 0x2e, 0x8d, 0x8e, 0x80, 0x6e, 0xe2,
	0x56, 0x1c, 0x06, 0x10, 0x18, 0xe9, 0x2c, 0xf8, 0xbd, 0xc3, 0x47, 0x71, 0x4d, 0xe4, 0xd8, 0xd2,
	0xb5, 0x03, 0xd1, 0x6b, 0x2b, 0xea, 0x31, 0x4e, 0xf1, 0x4e, 0x51, 0x37, 0x98, 0x45, 0xfb, 0x56,
	0x80, 0xd5, 0xaa, 0x3b, 0x3c, 0xfa, 0xe9, 0xc1, 0xc3, 0x4a, 0x9a, 0x63, 0xbc, 0xe0, 0x29, 0x6e,
	0x81, 0xdd, 0x83, 0xb6, 0x61, 0xf2, 0xde, 0x41, 0x5f, 0x67, 0x64, 0x17, 0x9a, 0xd3, 0xca, 0x29,
	0x13, 0xda, 0x4a, 0xe5, 0x8e, 0x09, 0x0d, 0xea, 0x85, 0x98, 0x6a, 0x96, 0x3b, 0x6b, 0x5c, 0x4a,
	0x1e, 0x43, 0xab, 0x14, 0x5f, 0x51, 0xd2, 0xb6, 0xad, 0x2f, 0x13, 0x73, 0x96, 0xd0, 0x67, 0x28,
	0x15, 0xdd, 0xb1, 0x24, 0xae, 0xb3, 0xe8, 0x29, 0xec, 0x6f, 0x10, 0x76, 0x97, 0x39, 0xfc, 0xe3,
	0x43, 0x73, 0xac, 0x72, 0x72, 0x02, 0xb0, 0xf6, 0xf4, 0x0e, 0x36, 0x14, 0xad, 0xbd, 0x84, 0xde,
	0xf3, 0x6d, 0xdd, 0xca, 0xa3, 0x4f, 0xd0, 0xad, 0x3f, 0x8a, 0x67, 0x37, 0xd7, 0x6a, 0x03, 0xbd,
	0xc1, 0x1d, 0x03, 0x15, 0xf4, 0x09, 0xc0, 0x9a, 0xa5, 0xb7, 0x90, 0x5d, 0x75, 0x6f, 0x23, 0x7b,
	0xd3, 0x53, 0x72, 0x0a, 0xf7, 0x6b, 0x7e, 0x86, 0xff, 0xbb, 0xe2, 0xb2, 0xdf, 0x7b, 0xb1, 0xbd,
	0xef, 0x70, 0xdf, 0x7e, 0xf8, 0x35, 0x0f, 0xbd, 0xab, 0x79, 0xe8, 0xfd, 0x9d, 0x87, 0xde, 0x8f,
	0x45, 0xd8, 0xb8, 0x5a, 0x84, 0x8d, 0xdf, 0x8b, 0xb0, 0xf1, 0xf9, 0x65, 0xce, 0xf5, 0xd9, 0xf9,
	0x24, 0x4e, 0xc5, 0x6c, 0xa4, 0x79, 0xc1, 0xd8, 0x94, 0xb3, 0x2f, 0x13, 0x26, 0x4b, 0x71, 0x2e,
	0x47, 0xab, 0x5f, 0xe2, 0x72, 0xf9, 0x9d, 0x7c, 0x2b, 0x51, 0x4d, 0xda, 0xf6, 0xa7, 0x78, 0xf5,
	0x2f, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x57, 0x7e, 0x9f, 0x6c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateGrid(ctx context.Context, in *MsgCreateGrid, opts ...grpc.CallOption) (*MsgCreateGridResponse, error)
	RegisterAdmin(ctx context.Context, in *MsgRegisterAdmin, opts ...grpc.CallOption) (*MsgRegisterAdminResponse, error)
	DeleteGrid(ctx context.Context, in *MsgDeleteGrid, opts ...grpc.CallOption) (*MsgDeleteGridResponse, error)
	CreateDevice(ctx context.Context, in *MsgCreateDevice, opts ...grpc.CallOption) (*MsgCreateDeviceResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateGrid(ctx context.Context, in *MsgCreateGrid, opts ...grpc.CallOption) (*MsgCreateGridResponse, error) {
	out := new(MsgCreateGridResponse)
	err := c.cc.Invoke(ctx, "/microgrid.iot.Msg/CreateGrid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterAdmin(ctx context.Context, in *MsgRegisterAdmin, opts ...grpc.CallOption) (*MsgRegisterAdminResponse, error) {
	out := new(MsgRegisterAdminResponse)
	err := c.cc.Invoke(ctx, "/microgrid.iot.Msg/RegisterAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteGrid(ctx context.Context, in *MsgDeleteGrid, opts ...grpc.CallOption) (*MsgDeleteGridResponse, error) {
	out := new(MsgDeleteGridResponse)
	err := c.cc.Invoke(ctx, "/microgrid.iot.Msg/DeleteGrid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateDevice(ctx context.Context, in *MsgCreateDevice, opts ...grpc.CallOption) (*MsgCreateDeviceResponse, error) {
	out := new(MsgCreateDeviceResponse)
	err := c.cc.Invoke(ctx, "/microgrid.iot.Msg/CreateDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateGrid(context.Context, *MsgCreateGrid) (*MsgCreateGridResponse, error)
	RegisterAdmin(context.Context, *MsgRegisterAdmin) (*MsgRegisterAdminResponse, error)
	DeleteGrid(context.Context, *MsgDeleteGrid) (*MsgDeleteGridResponse, error)
	CreateDevice(context.Context, *MsgCreateDevice) (*MsgCreateDeviceResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateGrid(ctx context.Context, req *MsgCreateGrid) (*MsgCreateGridResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGrid not implemented")
}
func (*UnimplementedMsgServer) RegisterAdmin(ctx context.Context, req *MsgRegisterAdmin) (*MsgRegisterAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterAdmin not implemented")
}
func (*UnimplementedMsgServer) DeleteGrid(ctx context.Context, req *MsgDeleteGrid) (*MsgDeleteGridResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGrid not implemented")
}
func (*UnimplementedMsgServer) CreateDevice(ctx context.Context, req *MsgCreateDevice) (*MsgCreateDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDevice not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateGrid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateGrid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateGrid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microgrid.iot.Msg/CreateGrid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateGrid(ctx, req.(*MsgCreateGrid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microgrid.iot.Msg/RegisterAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterAdmin(ctx, req.(*MsgRegisterAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteGrid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteGrid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteGrid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microgrid.iot.Msg/DeleteGrid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteGrid(ctx, req.(*MsgDeleteGrid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateDevice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microgrid.iot.Msg/CreateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateDevice(ctx, req.(*MsgCreateDevice))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "microgrid.iot.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGrid",
			Handler:    _Msg_CreateGrid_Handler,
		},
		{
			MethodName: "RegisterAdmin",
			Handler:    _Msg_RegisterAdmin_Handler,
		},
		{
			MethodName: "DeleteGrid",
			Handler:    _Msg_DeleteGrid_Handler,
		},
		{
			MethodName: "CreateDevice",
			Handler:    _Msg_CreateDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "microgrid/iot/tx.proto",
}

func (m *MsgCreateGrid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateGrid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateGrid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Side != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Side))
		i--
		dAtA[i] = 0x28
	}
	if m.CenterLon != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CenterLon))
		i--
		dAtA[i] = 0x20
	}
	if m.CenterLat != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CenterLat))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateGridResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateGridResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateGridResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterAdminResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterAdminResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterAdminResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Grid != nil {
		{
			size, err := m.Grid.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteGrid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteGrid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteGrid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteGridResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteGridResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteGridResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDevice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDevice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Others) > 0 {
		i -= len(m.Others)
		copy(dAtA[i:], m.Others)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Others)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Power != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Power))
		i--
		dAtA[i] = 0x30
	}
	if m.Voltage != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Voltage))
		i--
		dAtA[i] = 0x28
	}
	if m.Lon != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Lon))
		i--
		dAtA[i] = 0x20
	}
	if m.Lat != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Lat))
		i--
		dAtA[i] = 0x18
	}
	if m.GridId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GridId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateDeviceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDeviceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDeviceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateGrid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CenterLat != 0 {
		n += 1 + sovTx(uint64(m.CenterLat))
	}
	if m.CenterLon != 0 {
		n += 1 + sovTx(uint64(m.CenterLon))
	}
	if m.Side != 0 {
		n += 1 + sovTx(uint64(m.Side))
	}
	return n
}

func (m *MsgCreateGridResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgRegisterAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterAdminResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Grid != nil {
		l = m.Grid.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteGrid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteGridResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.GridId != 0 {
		n += 1 + sovTx(uint64(m.GridId))
	}
	if m.Lat != 0 {
		n += 1 + sovTx(uint64(m.Lat))
	}
	if m.Lon != 0 {
		n += 1 + sovTx(uint64(m.Lon))
	}
	if m.Voltage != 0 {
		n += 1 + sovTx(uint64(m.Voltage))
	}
	if m.Power != 0 {
		n += 1 + sovTx(uint64(m.Power))
	}
	l = len(m.Others)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateDeviceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateGrid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateGrid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateGrid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CenterLat", wireType)
			}
			m.CenterLat = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CenterLat |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CenterLon", wireType)
			}
			m.CenterLon = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CenterLon |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Side", wireType)
			}
			m.Side = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Side |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateGridResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateGridResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateGridResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterAdminResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterAdminResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterAdminResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Grid == nil {
				m.Grid = &Grid{}
			}
			if err := m.Grid.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteGrid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteGrid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteGrid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteGridResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteGridResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteGridResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDevice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GridId", wireType)
			}
			m.GridId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GridId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lat", wireType)
			}
			m.Lat = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lat |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lon", wireType)
			}
			m.Lon = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lon |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Voltage", wireType)
			}
			m.Voltage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Voltage |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			m.Power = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Power |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Others", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Others = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDeviceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDeviceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDeviceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
